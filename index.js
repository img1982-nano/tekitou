"use strict"; //Âé≥Ê†º„É¢„Éº„Éâ(„Åä„Åæ„Åò„Å™„ÅÑ)

//„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„É≠„Éº„Éâ„Åô„Çã
require('date-utils')//Date(Êó•ÊôÇ)„Çí‰æøÂà©„Å´„Åô„Çã„ÇÑ„Å§

//BOT„Éà„Éº„ÇØ„É≥„ÇíÂ§âÊï∞token„Å´Ë™≠„ÅøËæº„Åø
const { token, SUPABASE_URL, SUPABASE_API_KEY } = require('./config.json');
const supabaseUrl = SUPABASE_URL
const supabaseAnonKey = SUPABASE_API_KEY
//discord.js„Çí„Ç§„É≥„Éù„Éº„Éà
const axios = require("axios")
const { Client, GatewayIntentBits, Component } = require('discord.js');//discordjs„Åã„ÇâÂøÖË¶Å„Å™„ÅÆ„Çírequire
const { Events } = require("discord.js");
const { ButtonBuilder, ActionRowBuilder, ButtonStyle, SlashCommandBuilder} = require('discord.js');
//co = require("discord.js-buttons")(client);
const { createClient } = require("@supabase/supabase-js")

const client = new Client({ //„Ç§„É≥„ÉÜ„É≥„Éà„ÇíË®≠ÂÆö„Åó„Å¶„ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÇíÂÆöÁæ©„Åô„Çã
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent,
        GatewayIntentBits.GuildMembers,
    ],
});

// SUPABASE
const supabase = createClient(supabaseUrl, supabaseAnonKey);
//mongodb
const mongoose = require('mongoose');
mongoose.connect('mongodb://192.168.40.80:27017');

const userSchema = new mongoose.Schema({
    user_id: String,
    text: String
});

const User = mongoose.model('User', userSchema);

//„Éá„Éê„ÉÉ„Ç∞Áî®„Å´ÊÉÖÂ†±Êõ∏„ÅçÂá∫„Åó
console.log("-------start up-------");
//‰ªä„ÅÆÊôÇÈñì„Çí„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Åó„Å¶startup_time„Å´ÂÖ•„Çå„Çã
const startup_time = new Date().toFormat("YYYY/MM/DD HH24ÊôÇMIÂàÜSSÁßí");
//„É≠„Ç∞„Å®„Åó„Å¶„Éê„Éº„Ç∏„Éß„É≥ÊÉÖÂ†±„Å®Ëµ∑Âãï„Åó„ÅüÊó•ÊôÇ„ÇíÂá∫Âäõ„Åó„Å¶„Åä„Åè
console.log("start_up:" + startup_time);
console.log("node js   version : " + process.versions.node);
console.log("discordjs version : " + require('discord.js').version);
console.log("----------------------");
//„Éá„Éê„ÉÉ„Ç∞Áî®„Å´ÊÉÖÂ†±Êõ∏„ÅçÂá∫„Åó „Åì„Åì„Åæ„Åß
//„É≠„Ç∞„Ç§„É≥Âá¶ÁêÜ
client.login(token);
//Ëµ∑Âãï„Åó„Åü„Å®„Åç„Å´ÊúÄÂàù„Å´Ëµ∞„ÇãÂá¶ÁêÜ
client.on('ready', async () => {
    console.log(`${new Date().toFormat("YYYY/MM/DD HH24ÊôÇMIÂàÜSSÁßí")} ${client.user.tag}„Åß„É≠„Ç∞„Ç§„É≥„Åó„Åæ„Åó„Åü„ÄÇ`);
    client.user.setActivity("az!info", { type: "PLAYING" });
    const data = [{
        name: "ping",
        description: "Replies with Pong!",
    },
    {
        name: "random-cat",
        description: "„Å¨„Å£„Åì„Åã„Çè„Åà„Åà"
    }
    ];
    await client.application.commands.set(data);
});
client.on(Events.MessageCreate, async message => { //message„Å´‰Ωú„Çâ„Çå„Åümessage„Å®„Åã„ÅÑ„Çç„ÅÑ„ÇçÂÖ•„Çã
    if (message.author.bot) {//„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÈÄÅ‰ø°ËÄÖ„ÅåBOT„Å™„Çâ
        return;//return„Åó„Å¶„Åì„ÅÆÂÖà„ÅÆÂá¶ÁêÜ„Çí„Åï„Åõ„Å™„ÅÑ„ÄÇ
    }
    if (message.content.startsWith("az!ping")) { //message.content(„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÂÜÖÂÆπ)„Åå„Äå„Åä„ÅØ„Çà„Äç„ÅßÂßã„Åæ„Å£„Å¶„ÅÑ„Åü„Çâ
        const channel = message.channel
        const sleep = (ms) => new Promise(r => setTimeout(r, ms));
        channel.sendTyping()
        await sleep(3000)
        await message.channel.send("Pong"); //bot„Ååmessage.channel(„É°„ÉÉ„Çª„Éº„Ç∏„ÅåÈÄÅ‰ø°„Åï„Çå„Åü„ÉÅ„É£„É≥„Éç„É´)„Å´„Äå„Åä„ÅØ„Çà„Äç„Å®ÈÄÅ‰ø°„Åô„Çã
    }
    if (message.content.startsWith("az!show-menber")) {
        // „Åì„Åì„Å´„É°„É≥„Éê„Éº‰∏ÄË¶ß„ÇíË°®Á§∫„Åô„Çã„Éó„É≠„Ç∞„É©„É†
        const role = message.guild.roles.cache.get("1191350546259517481")
        message.reply(role.members.map(member=>member.username).join("\n"));
    }
    if (message.content.startsWith("get")) { //message.content(„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÂÜÖÂÆπ)„Åå„Äå„Åä„ÅØ„Çà„Äç„ÅßÂßã„Åæ„Å£„Å¶„ÅÑ„Åü„Çâ
        const info = message.content
        const test = info.replace("get", "")
        console.log(test)
        await message.channel.send(test)
    }
    if (message.content.startsWith("az!info")) {
        const { EmbedBuilder } = require("discord.js");
        const embed = new EmbedBuilder()
            .setDescription("Lang by JS")
            .setTitle('Azibot - INFO')
            .addFields({name: 'ÈñãÁô∫ËÄÖ', value: 'Azilamo'})
            .addFields({name:"Áî®ÈÄî", value:"„ÅÑ„Çç„ÅÑ„Çç"})
            .addFields({name:"„Ç≥„Éû„É≥„Éâ", value:"info - BOT„ÅÆÊÉÖÂ†±„ÇíË°®Á§∫\n ping - pong\n reasion - „Å™„Åû„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„Çí„Åô„Çã\n random-wiki - wikipedia„Åã„Çâ„É©„É≥„ÉÄ„É†„Å´Ë®ò‰∫ã„ÇíÁîüÊàê\n save - DB„Å´„ÉÜ„Ç≠„Çπ„Éà„Çí‰øùÂ≠ò„Åó„Åæ„Åô\n load - DB„Åã„Çâ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂèñ„ÇäÂá∫„Åó„Åæ„Åô\n random-cat - „É©„É≥„ÉÄ„É†„Å™Áå´„ÅÆÁîªÂÉè„ÇíË°®Á§∫„Åó„Åæ„Åô"})
            .setColor("Red")
            .setTimestamp()
            .setThumbnail("https://images.ctfassets.net/in6v9lxmm5c8/7J6X29QCpCjoReVMQFOC1D/f091383d411092eaa4487bad33560ca6/golang.png")
        message.channel.send({ embeds: [embed] })
    }
    if (message.content.startsWith("az!reasion")) {
        
        message.react("üîû")
        message.react("üî•")
        message.react("ü´£")
        message.react("üò≠")
        message.react("üá¶")
        message.react("üáø")
        message.react("üáÆ")
        message.react("üá±")
        message.react("üá≤")
        message.react("üá¥")
    }
    if (message.content.startsWith("buttes")) {
        const buttons = new ButtonBuilder()
            .setCustomId("tekitou")
            .setLabel("„Å¶„Åç„Å®„ÅÜ„Åº„Åü„Çì")
            .setStyle(ButtonStyle.Primary)
        
        const row = new ActionRowBuilder()
            .addComponents(buttons)
        
            await message.channel.send({
                content: "„Å¶„Åô„Å®„Åº„Åü„Çì„Å†„Çà‚Üì",
                components: [row],
            })
    }
    if (message.content.startsWith("az!random-wiki")) {
        const response = await axios.get('https://ja.wikipedia.org/w/api.php?format=json&action=query&list=random&rnnamespace=0&rnlimit=1')
        message.channel.send("„Çø„Ç§„Éà„É´  :   " + response.data.query.random[0].title + "\n„É™„É≥„ÇØ :   " + "https://ja.wikipedia.org/wiki/" + response.data.query.random[0].title)
    }
    if (message.content.startsWith("top-article")) {
        message.channel.send("„Åì„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅØ‰ΩúÊàê‰∏≠„Åß„Åô")
    }
    if (message.content.startsWith("az!random-cat")) {
        const catimage = await axios.get("https://api.thecatapi.com/v1/images/search?limit=1")
        message.channel.send(catimage.data[0].url)
    }
    if (message.content.startsWith('az!save')) {
        const args = message.content.slice('upload'.length).trim();
        const senderName = message.author.username
        const newUser = new User({user_id: senderName, text: args});
        newUser.save();
        message.channel.send(`‰øùÂ≠ò„Åï„Çå„Åü„ÉÜ„Ç≠„Çπ„Éà:${args}`);
    }
    if (message.content.startsWith("az!load")) {
        const senderName = message.author.username
        
        User.find({ user_id: senderName }).then(users => {
            const texts = users.map(user => user.text).join("\n");
            message.channel.send(`‰øùÂ≠ò„Åï„Çå„Åü„ÉÜ„Ç≠„Çπ„Éà:\n${texts}`);
        });
    }
});
client.on("interactionCreate", async (interaction) => {
    if (!interaction.isCommand()) {
        return;
    }
    if (interaction.commandName === 'ping') {
        await interaction.reply('PongÔºÅ');
    }
    if (interaction.commandName === 'random-cat') {
        const catimage = await axios.get("https://api.thecatapi.com/v1/images/search?limit=1")
        await interaction.reply(catimage.data[0].url);
    }
});